
A. Schema rules:

Mandatory: All schemas must have:

0. a schema-ident.xml file: this file contains info that will be used to
   identify the schema - this can be the name (and namespace) of the root 
	 element (eg. metadata for fgdc-std) or some elements (and content) that 
	 must be present in the metadata (eg. metadataStandardName and 
	 metadataStandardVersion from ISO19139)

1. a subdirectory named 'present'.
		* 'present' directory should have a 'csw' subdirectory.
		* 'present' directory should have presentation xslt that matches elements 
		from the schema (or those elements not in the base schema if this is a 
		profile)
		* 'present/csw' subdirectory should have xslts that present brief, 
		summary and full views of the metadata elements for csw requests

2. extract-uuid.xsl, extract-gml.xsl, index-fields.xsl, schema-substitutes.xml,
   schema-suggestions.xml, set-uuid.xsl

3. subdirectories named 'sample-data' and 'templates' - .mef files will be 
   loaded from 'sample-data' and .xml files will be loaded from 'templates'

4. update-fixed-info.xsl - can be an identity xslt if metadata records from
   this schema are not to be edited

Optional:

0. schema.xsd - if missing then metadata records in this schema will not be
   able to be edited (this is used by schemas that have dtds as opposed to XSDs
	 for example) - if schema.xsd exists then schema can be optionally placed in 
	 the 'schema' subdirectory

1. content for loc/en (and other languages) - this consists of codelists.xml,
   labels.xml, strings.xml (strings.xml contains any strings used by the 
	 present xslts) - these are available under XPaths in xslts: 
	 /root/gui/schemas/{schema_name}/strings
	 /root/gui/schemas/{schema_name}/codelists
	 /root/gui/schemas/{schema_name}/labels

2. convert subdirectory - should contain xslts to convert the schema - eg. 
   oai_dc.xsl which converts the schema to oai dc format

3. If records using this schema are to be edited: set-thumbnail.xsl, 
   extract-thumbnails.xsl, unset-thumbnails.xsl, 
   update-child-from-parent.xsl, 'process' subdirectory 

B. TO Build plugin schema zip archives:

Run ant in this directory

C. T0 test loading anzmeta schema (for example) as a zip file:

curl --cookie-jar cookies http://localhost:8080/geonetwork/srv/xml.user.login\?username=admin\&password=admin

curl --cookie cookies http://localhost:8080/geonetwork/srv/en/metadata.schema.add?schema=anzmeta\&fname=/var/tmp/anzmeta.zip

curl --cookie cookies http://localhost:8080/geonetwork/srv/xml.user.logout
